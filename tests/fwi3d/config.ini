[FWI]
# input for tdfwi code
basepath = /home/xzhang/VIP/tests/fwi3d
# source wavelet file
waveletfile = ${basepath}/data/wavelet.npy
# data file
datafile = ${basepath}/data/data.npy
# source file
srcfile = ${basepath}/data/sources.npy
# receiver file
recfile = ${basepath}/data/receivers.npy
# input directory
inpath = ${basepath}/fwi/inpput

# output directory
outpath = ${basepath}/fwi/out

[svgd]
# svgd or ssvgd is supported
method = ssvgd
# kernel function, only rbf or diagonal supported
kernel = rbf
# diagonal kernel
diag = grad
# optimizer, sgd, adam
optimizer = sgd
# using transform (true) or not (false)
transform = true
# grid points in z direction
nz = 63
# grid points in y direction
ny = 101
# grid points in x direction
nx = 101
# grid spacing in z direction
dz = 50
# grid spacing in y direction
dy = 50
# grid spacing in x direction
dx = 50
# prior type, 'Uniform' or 'Gaussian'
priortype = Uniform
# file that contains hyperparameters for prior pdf
prior = ${FWI:basepath}/Uniform_prior.txt
# number of particles
nparticles = 2
# number of iterations
iter = 10
# burn_in period, only used for ssvgd
burn_in = 0
# thining of the chain, only used for ssvgd
thin = 2
# batch size for number of particles, used to save memory 
particle_batch = ${nparticles}
# batch size for number of shots
shot_batch = 36
# step length for svgd and ssvgd
stepsize = 0.005
# decay the stepsize exponentially, the final stepsize will be stepsize*final_decay
final_decay = 0.2
# noise level, currently only support a constant number
sigma = 1e-7
# smoothness in x direction, 0 for no smoothness
smoothx = 1000
# smoothness in y direction, 0 for no smoothness
smoothy = 1000
# smoothness in z direction, 0 for no smoothness
smoothz = 1000
# output directory
outpath = ${FWI:basepath}/results

[dask]
# parallel environment used on a hpc system
pe = parallel_env_name
# number of nodes for each dask worker 
nnodes = 2
# number of dask workers, the total nodes required will be nnodes*nworkers
nworkers = ${svgd:nparticles}
# number of threads for each dask worker, usually set to one to let the third-party code decide the number of threads, e.g. by using omp_num_threads
ph = 1
# directory for dask 
daskpath = ${FWI:basepath}/dask 
